/**
 * This class is responsible for sending email OTP to the user.
 * It uses the JavaMailSender and TemplateEngine to send the email.
 * The email contains the OTP generated by the OTPGeneratorHelper.
 */

package com.applygo.applyflow.logic

import org.springframework.mail.javamail.JavaMailSender
import org.springframework.mail.javamail.MimeMessageHelper
import org.springframework.stereotype.Service
import org.thymeleaf.TemplateEngine
import org.thymeleaf.context.Context

@Service
class MailSenderHelper(
    val otpGeneratorHelper: OTPGeneratorHelper, val javaMailSender: JavaMailSender, val templateEngine: TemplateEngine
) {
    private val subject = "ApplyGo Verification"
    private val templateName = "email.html"

    fun sendEmailOTP(email: String): String = try {
        val mimeMessage = javaMailSender.createMimeMessage()
        val newOneTimePassword = otpGeneratorHelper.generateOTP()
        MimeMessageHelper(mimeMessage, true, "UTF-8").apply {
            setTo(email)
            setSubject(subject)
            setText(templateEngine.process(templateName, Context().apply {
                setVariables(mapOf("otp" to newOneTimePassword))
            }), true)
        }
        javaMailSender.send(mimeMessage)
        newOneTimePassword
    } catch (e: Exception) {
        e.printStackTrace()
        ""
    }

}
